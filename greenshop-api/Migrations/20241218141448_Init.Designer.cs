// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using greenshop_api.Data;

#nullable disable

namespace greenshop_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218141448_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("greenshop_api.Models.Plant", b =>
                {
                    b.Property<string>("PlantId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Acquisition_Date")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DiningRoom_Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LivingRoom_Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Long_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Office_Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<int>("Sale_Percent")
                        .HasColumnType("int");

                    b.Property<int>("Sale_Percent_Private")
                        .HasColumnType("int");

                    b.Property<string>("Short_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("greenshop_api.Models.Subscriber", b =>
                {
                    b.Property<string>("SubscriberId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubscriberEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("SubscriberId");

                    b.HasIndex("SubscriberEmail")
                        .IsUnique();

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("greenshop_api.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
